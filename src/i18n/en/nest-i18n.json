{
  "{IS_INSTANCE} decorator expects and object as value, but got falsy value.": "{IS_INSTANCE} decorator expects and object as value, but got falsy value.",
  "{property} is {constraints.0}": "{property} is {constraints.0}",
  "{property} is not a valid decimal number.": "{property} is not a valid decimal number.",
  "{property} must be a BIC or SWIFT code": "{property} must be a BIC or SWIFT code",
  "{property} must be a boolean string": "{property} must be a boolean string",
  "{property} must be a boolean value": "{property} must be a boolean value",
  "{property} must be a BTC address": "{property} must be a BTC address",
  "{property} must be a credit card": "{property} must be a credit card",
  "{property} must be a currency": "{property} must be a currency",
  "{property} must be a data uri format": "{property} must be a data uri format",
  "{property} must be a Date instance": "{property} must be a Date instance",
  "{property} must be a Firebase Push Id": "{property} must be a Firebase Push Id",
  "{property} must be a hash of type {constraints.0}": "{property} must be a hash of type {constraints.0}",
  "{property} must be a hexadecimal color": "{property} must be a hexadecimal color",
  "{property} must be a hexadecimal number": "{property} must be a hexadecimal number",
  "{property} must be a HSL color": "{property} must be a HSL color",
  "{property} must be a identity card number": "{property} must be a identity card number",
  "{property} must be a ISSN": "{property} must be a ISSN",
  "{property} must be a json string": "{property} must be a json string",
  "{property} must be a jwt string": "{property} must be a jwt string",
  "{property} must be a latitude string or number": "{property} must be a latitude string or number",
  "{property} must be a latitude,longitude string": "{property} must be a latitude,longitude string",
  "{property} must be a longitude string or number": "{property} must be a longitude string or number",
  "{property} must be a lowercase string": "{property} must be a lowercase string",
  "{property} must be a MAC Address": "{property} must be a MAC Address",
  "{property} must be a mongodb id": "{property} must be a mongodb id",
  "{property} must be a negative number": "{property} must be a negative number",
  "{property} must be a non-empty object": "{property} must be a non-empty object",
  "{property} must be a number conforming to the specified constraints": "{property} must be a number conforming to the specified constraints",
  "{property} must be a number string": "{property} must be a number string",
  "{property} must be a phone number": "{property} must be a phone number",
  "{property} must be a port": "{property} must be a port",
  "{property} must be a positive number": "{property} must be a positive number",
  "{property} must be a postal code": "{property} must be a postal code",
  "{property} must be a Semantic Versioning Specification": "{property} must be a Semantic Versioning Specification",
  "{property} must be a string": "{property} must be a string",
  "{property} must be a UUID": "{property} must be a UUID",
  "{property} must be a valid domain name": "{property} must be a valid domain name",
  "{property} must be a valid enum value": "{property} must be a valid enum value",
  "{property} must be a valid ISO 8601 date string": "{property} must be a valid ISO 8601 date string",
  "{property} must be a valid ISO31661 Alpha2 code": "{property} must be a valid ISO31661 Alpha2 code",
  "{property} must be a valid ISO31661 Alpha3 code": "{property} must be a valid ISO31661 Alpha3 code",
  "{property} must be a valid phone number": "{property} must be a valid phone number",
  "{property} must be a valid representation of military time in the format HH:MM": "{property} must be a valid representation of military time in the format HH:MM",
  "{property} must be an array": "{property} must be an array",
  "{property} must be an EAN (European Article Number)": "{property} must be an EAN (European Article Number)",
  "{property} must be an email": "{property} must be an email",
  "{property} must be an Ethereum address": "{property} must be an Ethereum address",
  "{property} must be an IBAN": "{property} must be an IBAN",
  "{property} must be an instance of {constraints.0}": "{property} must be an instance of {constraints.0}",
  "{property} must be an integer number": "{property} must be an integer number",
  "{property} must be an ip address": "{property} must be an ip address",
  "{property} must be an ISBN": "{property} must be an ISBN",
  "{property} must be an ISIN (stock/security identifier)": "{property} must be an ISIN (stock/security identifier)",
  "{property} must be an ISRC": "{property} must be an ISRC",
  "{property} must be an object": "{property} must be an object",
  "{property} must be an URL address": "{property} must be an URL address",
  "{property} must be base32 encoded": "{property} must be base32 encoded",
  "{property} must be base64 encoded": "{property} must be base64 encoded",
  "{property} must be divisible by {constraints.0}": "{property} must be divisible by {constraints.0}",
  "{property} must be empty": "{property} must be empty",
  "{property} must be equal to {constraints.0}": "{property} must be equal to {constraints.0}",
  "{property} must be locale": "{property} must be locale",
  "{property} must be longer than or equal to {constraints.0} and shorter than or equal to {constraints.1} characters": "{property} must be longer than or equal to {constraints.0} and shorter than or equal to {constraints.1} characters",
  "{property} must be longer than or equal to {constraints.0} characters": "{property} must be longer than or equal to {constraints.0} characters",
  "{property} must be magnet uri format": "{property} must be magnet uri format",
  "{property} must be MIME type format": "{property} must be MIME type format",
  "{property} must be one of the following values: {constraints.0}": "{property} must be one of the following values: {constraints.0}",
  "{property} must be RFC 3339 date": "{property} must be RFC 3339 date",
  "{property} must be RGB color": "{property} must be RGB color",
  "{property} must be shorter than or equal to {constraints.0} characters": "{property} must be shorter than or equal to {constraints.0} characters",
  "{property} must be shorter than or equal to {constraints.1} characters": "{property} must be shorter than or equal to {constraints.1} characters",
  "{property} must be uppercase": "{property} must be uppercase",
  "{property} must be valid octal number": "{property} must be valid octal number",
  "{property} must be valid passport number": "{property} must be valid passport number",
  "{property} must contain {constraints.0} values": "{property} must contain {constraints.0} values",
  "{property} must contain a {constraints.0} string": "{property} must contain a {constraints.0} string",
  "{property} must contain a full-width and half-width characters": "{property} must contain a full-width and half-width characters",
  "{property} must contain a full-width characters": "{property} must contain a full-width characters",
  "{property} must contain a half-width characters": "{property} must contain a half-width characters",
  "{property} must contain any surrogate pairs chars": "{property} must contain any surrogate pairs chars",
  "{property} must contain at least {constraints.0} elements": "{property} must contain at least {constraints.0} elements",
  "{property} must contain not more than {constraints.0} elements": "{property} must contain not more than {constraints.0} elements",
  "{property} must contain one or more multibyte chars": "{property} must contain one or more multibyte chars",
  "{property} must contain only ASCII characters": "{property} must contain only ASCII characters",
  "{property} must contain only letters (a-zA-Z)": "{property} must contain only letters (a-zA-Z)",
  "{property} must contain only letters and numbers": "{property} must contain only letters and numbers",
  "{property} must match {constraints.0} regular expression": "{property} must match {constraints.0} regular expression",
  "{property} must not be greater than {constraints.0}": "{property} must not be greater than {constraints.0}",
  "{property} must not be less than {constraints.0}": "{property} must not be less than {constraints.0}",
  "{property} should not be empty": "{property} should not be empty",
  "{property} should not be equal to {constraints.0}": "{property} should not be equal to {constraints.0}",
  "{property} should not be null or undefined": "{property} should not be null or undefined",
  "{property} should not be one of the following values: {constraints.0}": "{property} should not be one of the following values: {constraints.0}",
  "{property} should not contain {constraints.0} values": "{property} should not contain {constraints.0} values",
  "{property} should not contain a {constraints.0} string": "{property} should not contain a {constraints.0} string",
  "{property}'s byte length must fall into ({constraints.0}, {constraints.1}) range": "{property}'s byte length must fall into ({constraints.0}, {constraints.1}) range",
  "All {property}'s elements must be unique": "All {property}'s elements must be unique",
  "each value in ": "each value in ",
  "maximal allowed date for ": "maximal allowed date for ",
  "minimal allowed date for ": "minimal allowed date for ",
  "nested property {property} must be either object or array": "nested property {property} must be either object or array",
  "Password must contain uppercase": "Password must contain uppercase",
  "Password must contain lowercase": "Password must contain lowercase",
  "Password must contain number": "Password must contain number",
  "Password must contain special characters": "Password must contain special characters"
}
